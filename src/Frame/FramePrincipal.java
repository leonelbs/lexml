/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import database.DbConnect;
import database.GeraQuery;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import util.LocalizaBaseDados;
import util.MoverArch;
import xml.XmlNfce;
import xml.beanNfce.Det;
import xml.beanNfce.NfeProc;
import xml.beanNfeExcluida.pfwin.Importx;

/**
 *
 * @author leonel.santos
 */
public class FramePrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FramePrincipal
     */
    ResultSet resultado;
    DefaultTableModel tbModel;
    int EmpresaId;
    FrameSaida fSainda;
    int EmpresaIdCx;
    int EmpresaIdPf;
    int contErros;
    String retorno;
    String updatePfwin;
    String textoTotalSaida;
    boolean statusEcf;
    private String dirArqLog;
    private ArrayList listArcXml;

    public FramePrincipal() {
        initComponents();

        TableRowSorter<TableModel> sorter = null;

        this.setLocationRelativeTo(null);
        URL url = this.getClass().getResource("/IMG/logo_Intercamp.png");
        //Toolkit kit = this.getToolkit();
        Image icone = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(icone);
    }

    //private static String query = "select distinct classe from PESSOA";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btGrupoPessoaPeroduto = new javax.swing.ButtonGroup();
        bgTipoXmlimport = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txAliases1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        rbNfce = new javax.swing.JRadioButton();
        rbNfe = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txPorta2 = new javax.swing.JTextField();
        txServer2 = new javax.swing.JTextField();
        txAliases2 = new javax.swing.JTextField();
        txUser2 = new javax.swing.JTextField();
        txPassword2 = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jlStatusCFwin1 = new javax.swing.JLabel();
        jtEmpresaPfwin = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        btGo = new javax.swing.JToggleButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("XML Pfwin Importa");
        setResizable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Localizar XMl"));

        jLabel6.setText("Path");

        txAliases1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txAliases1ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/Visibility.png"))); // NOI18N
        jButton1.setAlignmentX(0.5F);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bgTipoXmlimport.add(rbNfce);
        rbNfce.setSelected(true);
        rbNfce.setText("NFCe");

        bgTipoXmlimport.add(rbNfe);
        rbNfe.setText("NFe");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(rbNfce)
                        .addGap(18, 18, 18)
                        .addComponent(rbNfe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txAliases1))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txAliases1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbNfe)
                        .addComponent(rbNfce))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Base de Dados pfwin"));

        jLabel9.setText("Server");

        jLabel10.setText("Aliases");

        jLabel11.setText("User");

        jLabel12.setText("Password");

        txPorta2.setText("3050");

        txServer2.setText("localhost");

        txAliases2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txAliases2ActionPerformed(evt);
            }
        });

        txUser2.setText("SYSDBA");

        txPassword2.setText("masterkey");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/Visibility.png"))); // NOI18N
        jButton2.setToolTipText("");
        jButton2.setMargin(new java.awt.Insets(2, 14, 15, 14));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setText("Matriz");
        jLabel14.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel14.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jlStatusCFwin1.setText("Status...");
        jlStatusCFwin1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jlStatusCFwin1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jtEmpresaPfwin.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jtEmpresaPfwinCaretUpdate(evt);
            }
        });
        jtEmpresaPfwin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtEmpresaPfwinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txUser2)
                            .addComponent(txPassword2, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtEmpresaPfwin, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jlStatusCFwin1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(txServer2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txPorta2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                    .addComponent(txAliases2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txAliases2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txUser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtEmpresaPfwin)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlStatusCFwin1)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txServer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txPorta2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções"));

        btGo.setSelected(true);
        btGo.setText("GO");
        btGo.setEnabled(false);
        btGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("NFCe Cancelada");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btGo, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btGo, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txAliases1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txAliases1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txAliases1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        ArrayList filtros = new ArrayList();
        filtros.add("xml");
        LocalizaBaseDados base = new LocalizaBaseDados(filtros);
        textoTotalSaida = "";
        base.getDiretorio();
        if (base.retornoChooser == JFileChooser.APPROVE_OPTION) {
            listArcXml = new ArrayList();
            listArcXml = base.getListaArc();
            txAliases1.setText(base.getDiretorio());

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        ArrayList filtros = new ArrayList();
        filtros.add("fbk");
        filtros.add("gbk");
        filtros.add("gdb");
        filtros.add("fdb");

        LocalizaBaseDados base = new LocalizaBaseDados(filtros);

        if (base.retornoChooser == JFileChooser.APPROVE_OPTION) {

            txAliases2.setText(base.getPathelecionado());
            txServer2.setText(base.getIp());
            String strConexaoPFwin = "jdbc:firebirdsql:" + txServer2.getText() + "/"
                    + txPorta2.getText() + ":" + txAliases2.getText()
                    + "?encoding=win1252";

            DbConnect conexaoPfwin = new DbConnect(strConexaoPFwin, txUser2.getText(), new String(txPassword2.getPassword()), true);
            dirArqLog = base.getArqLog();
            //  System.out.println(dirArqLog);
            String consultaEmpresaPFwin = "SELECT DISTINCT EMPRESA_ID FROM EMPRESA WHERE TIPO_EMPRESA='M'; ";
            ResultSet resultEmpresaPFwin;
            try {
                resultEmpresaPFwin = conexaoPfwin.consulta(consultaEmpresaPFwin);
                while (resultEmpresaPFwin.next()) {

                    jtEmpresaPfwin.setText(resultEmpresaPFwin.getString(1));

                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(FramePrincipal.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

        }
        if (!(jtEmpresaPfwin.getText().isEmpty() && txAliases1.getText().isEmpty())) {

            btGo.setEnabled(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txAliases2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txAliases2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txAliases2ActionPerformed

    private void jtEmpresaPfwinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtEmpresaPfwinActionPerformed

        try {
            if (!(jtEmpresaPfwin.getText().isEmpty() && txAliases1.getText().isEmpty())) {
                EmpresaIdPf = Integer.parseInt(jtEmpresaPfwin.getText());
                btGo.setEnabled(true);
            }
        } catch (NumberFormatException ex) {
            //btGo.setEnabled(false);
        }


    }//GEN-LAST:event_jtEmpresaPfwinActionPerformed

    private void jtEmpresaPfwinCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jtEmpresaPfwinCaretUpdate
        // TODO add your handling code here:

        try {
            if (!(jtEmpresaPfwin.getText().isEmpty() && txAliases1.getText().isEmpty())) {
                EmpresaIdPf = Integer.parseInt(jtEmpresaPfwin.getText());
                btGo.setEnabled(true);
            }
        } catch (NumberFormatException ex) {
            btGo.setEnabled(false);
        }
    }//GEN-LAST:event_jtEmpresaPfwinCaretUpdate

    private void btGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGoActionPerformed

        if (!(jtEmpresaPfwin.getText().isEmpty() && txAliases1.getText().isEmpty())) {
            btGo.setEnabled(false);
        }

        EmpresaId = Integer.parseInt(jtEmpresaPfwin.getText());

        String strConexaoPFwin = "jdbc:firebirdsql:" + txServer2.getText() + "/"
                + txPorta2.getText() + ":" + txAliases2.getText()
                + "?encoding=win1252";

        fSainda = new FrameSaida();
        fSainda.setVisible(true);

        fSainda.jProgressBar1.setIndeterminate(true);
        contErros = 0;

        // xml
        Thread tr;//tr
        ArrayList listaUpdatePfwin = new ArrayList();
        tr = new Thread() {
            @Override
            @SuppressWarnings("null")
            public void run() {

                XmlNfce xmlNfce = new XmlNfce();
                //connectar pfwin
                //CONECTAR NO  banco de dados PFWIN
//                DbConnect conexaoPfwin = new DbConnect(strConexaoPFwin, txUser2.getText(), new String(txPassword2.getPassword()), false);
//                GeraQuery update = new GeraQuery();
//                FileWriter fileWrite = null;
//                FileWriter fileWrite2 = null;
//                Random rr = new Random();
//                File diretorioFile = new File(dirArqLog + "\\xmlResult_" + rr.nextInt());
//                boolean ok = diretorioFile.mkdir();

     
//
//                BufferedWriter bufferedWriter = null;
//                BufferedWriter bufferedWrite2 = null;
//
//                try {
//                    File f1 = new File(dirArqLog + "\\ArquivoLog.SQL");
//                    if (f1.exists()) {
//                        f1.delete();
//                    }
//                    File f3 = new File(dirArqLog + "\\xmlLidos.LOG");
//                    if (f3.exists()) {
//                        f3.delete();
//                    }
//
//                    fileWrite = new FileWriter(new File(dirArqLog + "\\ArquivoLog.SQL"), true);
//                    bufferedWriter = new BufferedWriter(fileWrite);
//                    fileWrite2 = new FileWriter(new File(dirArqLog + "\\xmlLidos.LOG"), true);
//                    bufferedWrite2 = new BufferedWriter(fileWrite2);
//
//                } catch (IOException ex) {
//                    Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
//                }
//                PrintWriter print = new PrintWriter(fileWrite);
                // lista de xmls-------------------------------
                for (Object file : listArcXml) {// inicio da lista de arquivos ***************************************************
                       
//                    try {
//                        bufferedWrite2.write(file.toString());
//                        bufferedWrite2.newLine();
//                        fileWrite2.flush();
//                    } catch (IOException ex) {
//                        Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
//                    }
                    Importx  xml = null;
                    System.gc();

                    try {
                        xml = XmlImportaTerc .carregaXml(file.toString());

                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (ok) {
                        MoverArch mover = new MoverArch(file.toString(), diretorioFile.toString());
                        String moverArquivo = mover.moverArquivo();
                        System.out.println(moverArquivo);

                    }
                    String colunasCfwin;
                    String dadosInserir;
                    String empresa_id = null;
                    String ecf_consumidor_id = new String();
                    LocalDate dat_movimento;
                    int turno_id;
                    int pdv_id;
                    Timestamp dat_emissao;
                    LocalDate dat_reducao;
                    String num_ecf;
                    String num_nf = null;
                    String funcionario;
                    int funcionario_id = 0;
                    String empresa_pessoa_id = "null";
                    String pessoa_id = "null";
                    String num_cpf_cnpj;
                    int serie;
                    double val_total;

                    String cfwin_id;
                    int modelo;
                    String num_serie_sat;
                    String chave_acesso;
                    String valida_chave_acesso = null;
                    Timestamp dat_inclusao;
                    String axmlcamNota = xml.getNfe().getInfNFe().getInfAdic().getInfCpl();
                    ArrayList consultas = new ArrayList();

                    dat_movimento = LocalDate.parse(xml.getNfe().getInfNFe().getIde().getDhEmi().toLocalDate().toString());
                    dat_emissao = Timestamp.valueOf(LocalDateTime.parse(xml.getNfe().getInfNFe().getIde().getDhEmi().toLocalDateTime().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME)));
                    dat_reducao = LocalDate.parse(xml.getNfe().getInfNFe().getIde().getDhEmi().toLocalDate().toString());
                    dat_inclusao = dat_emissao;
                    turno_id = Integer.parseInt(axmlcamNota.substring(axmlcamNota.lastIndexOf("TN:") + 3, axmlcamNota.indexOf("PDV:")).trim());
                    pdv_id = Integer.parseInt(axmlcamNota.substring(axmlcamNota.lastIndexOf("PDV:") + 4, axmlcamNota.indexOf("PDV:") + 5).trim());
                    funcionario = axmlcamNota.substring(axmlcamNota.lastIndexOf("FUNC:") + 5, axmlcamNota.indexOf("TN:")).trim();
                    val_total = xml.getNfe().getInfNFe().getTotal().getIcmsTot().getvProd();
                    chave_acesso = "'" + xml.getNfe().getInfNFe().getId().substring(3) + "'";
                    num_serie_sat = "null";
                    modelo = xml.getNfe().getInfNFe().getIde().getMod();
                    serie = xml.getNfe().getInfNFe().getIde().getSerie();
                    cfwin_id = "null";
                    num_cpf_cnpj = "null";
                    String cnpjEmpresa;
                    cnpjEmpresa = xml.getNfe().getInfNFe().getEmit().getCnpjEemit().trim();
                    String nomeFantasia;
                    nomeFantasia = xml.getNfe().getInfNFe().getEmit().getxNomeEmit().trim();

                    consultas.add("SELECT EMPRESA_ID FROM EMPRESA WHERE NUM_CNPJ= " + cnpjEmpresa + ";");//EMPRESA_ID
                    consultas.add("select GEN_ID(gen_ecf_consumidor_id,1) FROM RDB$DATABASE;");//ECF_CONSUMIDOR_ID;
                    consultas.add("SELECT PESSOA_ID FROM PESSOA WHERE CLASSE=3 AND NOME LIKE '" + funcionario + "';");
                    consultas.add("select distinct ss.chave_acesso from ecf_consumidor ss where ss.chave_acesso=" + chave_acesso + ";");

                    num_nf = xml.getNfe().getInfNFe().getIde().getnNF();

                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy.mm.dd HH:mm:ss");
                    ResultSet rs;
                    ResultSet rschave = null;
                    String validachave = "0";

                    try {
                        rs = conexaoPfwin.consulta(consultas.get(0).toString());
                        while (rs.next()) {
                            empresa_id = rs.getString(1);
                        }

                        rs = conexaoPfwin.consulta(consultas.get(1).toString());
                        while (rs.next()) {
                            ecf_consumidor_id = rs.getString(1);
                        }

                        rs = conexaoPfwin.consulta(consultas.get(2).toString());
                        while (rs.next()) {
                            funcionario_id = Integer.parseInt(rs.getString(1));
                        }

                        rs = conexaoPfwin.consulta(consultas.get(3).toString());
                        while (rs.next()) {
                            rschave = rs;
                            validachave = rs.getString(1);
                        }

                    } catch (ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    colunasCfwin = "EMPRESA_ID, ECF_CONSUMIDOR_ID, DAT_MOVIMENTO, TURNO_ID, PDV_ID, DAT_EMISSAO, DAT_REDUCAO, NUM_NF, FUNCIONARIO_ID, "
                            + "EMPRESA_PESSOA_ID, PESSOA_ID, NUM_CPF_CNPJ, VAL_TOTAL, DAT_INCLUSAO, CFWIN_ID, MODELO, NUM_SERIE_SAT, CHAVE_ACESSO, SERIE";
                    dadosInserir = empresa_id + "," + ecf_consumidor_id + ",'" + dat_movimento + "'," + turno_id + "," + pdv_id + ",'"
                            + dat_emissao + "','" + dat_reducao + "','" + num_nf + "'," + funcionario_id + "," + empresa_pessoa_id + ","
                            + pessoa_id + "," + num_cpf_cnpj + "," + val_total + ",'" + dat_inclusao + "'," + cfwin_id + "," + modelo + ","
                            + num_serie_sat + "," + chave_acesso + "," + serie;
                    String colunMatch = "CHAVE_ACESSO";

                    updatePfwin = /*"UPDATE OR */ "INSERT INTO  ECF_CONSUMIDOR_CANC(" + colunasCfwin + ") VALUES (" + dadosInserir + "); ";//)MATCHING(" + colunMatch + ");";

                    if (validachave.length() < 2) {
                        listaUpdatePfwin.add(updatePfwin);

                        System.out.println(chave_acesso);
                        try {
                            //print.printf("\n");
                            //
                            bufferedWriter.write("/*" + empresa_id + ";" + cnpjEmpresa + ";" + nomeFantasia + ";" + dat_emissao + ";"
                                    + num_nf + ";" + chave_acesso.replace("'", "") + ";" + val_total + "*/");
                            bufferedWriter.newLine();
                            bufferedWriter.write(updatePfwin);
                            bufferedWriter.newLine();
                            bufferedWriter.flush();
                            //bufferedWriter.write(file.toString());
                            //bufferedWriter.newLine();

                            // fileWrite.write(chave_acesso+"\n");
                        } catch (IOException ex) {
                            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        //System.out.println(chave_acesso);
                        fSainda.txAreaSaida.append("/*" + empresa_id + ";" + cnpjEmpresa + ";" + nomeFantasia + ";" + dat_emissao + ";"
                                + num_nf + ";" + chave_acesso.replace("'", "") + ";" + val_total + "*/");
                        fSainda.txAreaSaida.append("\n");
                        fSainda.txAreaSaida.requestFocus();
                        fSainda.txAreaSaida.setCaretPosition(fSainda.txAreaSaida.getText().length());

                    }

                    ///ITEM_ECF----------------------------------------------------------------------------------------------------------
                    String colItemEcf;
                    String colDadosItem;
                    String UpdatePfwinItem;
                    int prodCod;
                    String produto_id;
                    String combustivel_id;
                    double quantidade;
                    double precoUnitario;
                    double val_item;
                    double valDescAcres;
                    int cfop;
                    String updateItemEcfConsumidor;

                    colItemEcf = "EMPRESA_ID, ECF_CONSUMIDOR_ID, ITEM_ECF_CONSUMIDOR_ID, PRODUTO_ID, SERVICO_ID, COMBUSTIVEL_ID, CT, CTO, SN_LUBRIFICANTE, "
                            + "PER_ICMS, PER_RED_ICMS, QTDE, PRC_UNITARIO, PRC_ESPECIAL, VAL_ITEM,  VAL_COMISSAO, PER_COMISSAO, "
                            + "CFWIN_ID, FUNCIONARIO_ID, PER_ISSQN, CFOP";

                    for (Det item : xml.getNfe().getInfNFe().getDet()) {
                        UpdatePfwinItem = item.getProduto().getcProd();
                        quantidade = item.getProduto().getqCom();
                        precoUnitario = item.getProduto().getvUnCom();
                        val_item = item.getProduto().getvProd();
                        cfop = item.getProduto().getCfop();
                        valDescAcres = 0;

                        if (item.getProduto().getcProd().contains("C")) {
                            combustivel_id = item.getProduto().getcProd().replace("C", "");
                            produto_id = "null";
                        } else {
                            produto_id = item.getProduto().getcProd();
                            combustivel_id = "null";
                        }
                        colDadosItem = empresa_id + "," + ecf_consumidor_id + ",null," + produto_id + ",null," + combustivel_id
                                + ",null,null,null,null,null," + quantidade + "," + precoUnitario + ",null," + val_item + ",null,null,null," + funcionario_id
                                + ",null," + cfop;
                        colunMatch = "EMPRESA_ID, ECF_CONSUMIDOR_ID, PRODUTO_ID, SERVICO_ID, COMBUSTIVEL_ID, CT, CTO, SN_LUBRIFICANTE, "
                                + "PER_ICMS, PER_RED_ICMS, QTDE, PRC_UNITARIO, PRC_ESPECIAL, VAL_ITEM,  VAL_COMISSAO, PER_COMISSAO, "
                                + "CFWIN_ID, FUNCIONARIO_ID, PER_ISSQN, CFOP";
                        updateItemEcfConsumidor = "UPDATE OR INSERT INTO  ITEM_ECF_CONSUMIDOR_CANC(" + colItemEcf + ") VALUES (" + colDadosItem + ")MATCHING(" + colunMatch + ");";

                        if (validachave.length() < 2) {
                            listaUpdatePfwin.add(updateItemEcfConsumidor);
                            try {
                                bufferedWriter.write(updateItemEcfConsumidor);
                                bufferedWriter.newLine();
                            } catch (IOException ex) {
                                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }
                    }

                    ///FIM ITEM_ECF------------------------------------------------------------------------------------------------------  
                    xml = null;
                    System.gc();

                }//fim da lista de arquivos
                try {

                    bufferedWriter.close();
                    bufferedWrite2.close();
                } catch (IOException ex) {
                    Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }

                listaUpdatePfwin.stream().forEach((lista) -> {
                    fSainda.txAreaSaida.append((String) lista);
                    fSainda.txAreaSaida.append("\n");
                    fSainda.txAreaSaida.requestFocus();
                    fSainda.txAreaSaida.setCaretPosition(fSainda.txAreaSaida.getText().length());
                    /* if (fSainda.txAreaSaida.getText().length() > 100000) {
                        textoTotalSaida = textoTotalSaida + "\n" + fSainda.txAreaSaida.getText();
                        fSainda.txAreaSaida.setText("");
                    }*/

                    //  fSainda.txAreaSaida.setText(textoTotalSaida);
                });
                // fSainda.txAreaSaida.setText(textoTotalSaida);

                //------------------------------------------EXECUTA INSERTS   
                try {
                    conexaoPfwin.insert(listaUpdatePfwin);

                } catch (ClassNotFoundException | SQLException ex) {

                    contErros = contErros + 1;
                    try {
                        conexaoPfwin.desconectar();
                    } catch (SQLException ex1) {
                        Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex1);
                    }
                    fSainda.txSeeErros.setForeground(Color.red);
                    fSainda.txSeeErros.append("--Erro "
                            + contErros + " -------------------------------------------------"
                            + "---------------------------------------------\n ");
                    fSainda.txSeeErros.setForeground(Color.blue);
                    fSainda.txSeeErros.append(updatePfwin + "\n");
                    fSainda.txSeeErros.setForeground(Color.red);
                    fSainda.txSeeErros.append("/*" + ex.getMessage() + "\n");
                    fSainda.jlseeErros.setText("Total de Erros= " + contErros);
                    fSainda.txAreaSaida.setText("");

                    System.gc();
                }

                //FIM ------------------------------------------EXECUTA INSERTS  
                jProgressBar1.setIndeterminate(
                        false);
                fSainda.jProgressBar1.setIndeterminate(
                        false);
                JOptionPane.showMessageDialog(
                        null, "Importação Concluida!");
                btGo.setEnabled(
                        true);
                
            }//run()

        };
        tr.start();
        fSainda.txAreaSaida.setText(textoTotalSaida);
        try {
            Thread.sleep(50);
        } catch (InterruptedException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE,
                    null, ex);
        }

    }//GEN-LAST:event_btGoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgTipoXmlimport;
    private javax.swing.JToggleButton btGo;
    private javax.swing.ButtonGroup btGrupoPessoaPeroduto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel jlStatusCFwin1;
    private javax.swing.JTextField jtEmpresaPfwin;
    private javax.swing.JRadioButton rbNfce;
    private javax.swing.JRadioButton rbNfe;
    private javax.swing.JTextField txAliases1;
    private javax.swing.JTextField txAliases2;
    private javax.swing.JPasswordField txPassword2;
    private javax.swing.JTextField txPorta2;
    private javax.swing.JTextField txServer2;
    private javax.swing.JTextField txUser2;
    // End of variables declaration//GEN-END:variables

    private void executeHQLQuery(String q1) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
